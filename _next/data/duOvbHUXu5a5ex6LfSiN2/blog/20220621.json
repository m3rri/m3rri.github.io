{"pageProps":{"post":{"id":"20220621","content":"\n## IntelliJ fallback version 문제없이 사용하기\n### Fallback version\n- fallback : 어떤 요청에 대한 처리에 실패했을 때 최후 수단으로 대체되어 실행되는 일`(이라고 이해하고 있음)`\n- 인텔리제이에서 fallback 버전은 해당 버전으로 1년이상 구독했을 경우, 라이센스가 만료되어도 해당 버전으로는 계속해서 사용 가능하도록 지원해주는 것을 말한다.\n- 아래 그림에서 `Fallback ver` 의 버전을 확인하고 이 다음 버전으로 업데이트 되지 않도록 주의해야한다.  \n  만일 업데이트 됐을 때는, 버전명을 클릭하여(`2021.1`) 해당 버전의 다운로드 링크로 접근하여 재설치 해주면 문제없이 사용 가능하다.  \n\n![image](https://user-images.githubusercontent.com/37619441/174692222-20e6bd94-39b3-48b7-a9aa-9b90691d36f7.png)  \n### Setting -> Do not check update IDE\n- Ctrl + Alt + S (Settings)\n- Appearance & Behavior > System Settings > Updates 에서 3개의 체크 항목을 모두 해제한 후 [Apply] 해준다  \n\n![image](https://user-images.githubusercontent.com/37619441/174692552-a92b4894-85ee-4732-9d5c-0f03a3e40182.png)\n\n_The End_\n","title":"IntelliJ Fallback ver 사용","date":"2022-06-21","category":["idea","intellij"],"tag":["license","fallback"]},"prev":{"id":"20220608","title":"Github Action","date":"2022-06-08","category":["tool","git"],"tag":["git-action","git"]},"next":{"id":"20220707","title":"IntelliJ에서 Spring Boot dev tools 사용하기","date":"2022-07-07","category":["idea","intellij"],"tag":["dev-tools","thymeleaf"]},"nearPost":[{"id":"20221020","title":"Ubuntu 명령어 정리","date":"2022-10-20","category":["os","linux"],"tag":["command"]},{"id":"20220816","title":"What happens when jdk compiles the generic type <T>","date":"2022-08-16","category":["backend","java"],"tag":["Generic","Type Erasure","ClassCastException"]},{"id":"20220803","title":"Linux에서 .conf 파일의 주석으로 사용 가능한 문자열","date":"2022-08-03","category":["os","linux"],"tag":["beanstalk","springboot","nginx"]},{"id":"20220707","title":"IntelliJ에서 Spring Boot dev tools 사용하기","date":"2022-07-07","category":["idea","intellij"],"tag":["dev-tools","thymeleaf"]},{"id":"20220608","title":"Github Action","date":"2022-06-08","category":["tool","git"],"tag":["git-action","git"]}]},"__N_SSG":true}