{"pageProps":{"post":{"id":"20230216","content":"\n### 정의\n* 구조\n  ![image](https://user-images.githubusercontent.com/37619441/219231006-aedce696-7fb5-4c6a-bb6b-21e804166762.png)\n  출처 : [위키백과](https://ko.wikipedia.org/wiki/%ED%8D%BC%EC%82%AC%EB%93%9C_%ED%8C%A8%ED%84%B4)\n  \n  - 클라이언트 : 파사드 클래스를 사용하는 객체\n  - 파사드 : 그림에서 Interne1~3에 해당하는 클래스 등 응용 프로그램 코드와 상호 동작하는 클래스\n  - 패키지 : API 집합. 파사드 클래스를 통해 접근할 수 있음\n\n* 일련의 저수준 인터페이스들을 하나의 고수준 인터페이스로 묶어주는(wrapping) 패턴  \n  출처 : [Dev World - [Design Pattern] 파사드 패선이란 무엇인가? : Facade Pattern](https://kotlinworld.com/372)  \n  - 클라이언트와 패키지 사이에 의존성을 느슨하게 만들어 준다\n  - 클라이언트에서 특정 기능을 실행하기 위해 복잡하게 인터페이스를 호출할 필요가 없어지는 장점이 있다\n  - 고수준 인터페이스가 너무 복잡해지는 문제를 대비하기 위해서 저수준 인터페이스도 간단하게 만드는 방식을 지향해야함\n\n> 파사드가 다른 파사드의 패키지일 수 있고, 패키지도 다른 패키지의 파사드일 수 있다\n  \n### 생각 정리\n개발할 때는 이런 디자인 패턴임을 염두하지 않고, 유지보수 할 때 편하게 하려고 메소드 호출 등의 내용을 상위 메소드나 클래스로 묶어서 작업했었다.\n개념을 알고 나니 조금 더 명확하게 상위/하위 클래스를 생성해서 작업할 수 있을 것 같다.\n","title":"Facade Pattern (파사드 패턴)","date":"2023-02-16","category":["SW","design pattern"],"tag":["oop","design pattern"]},"prev":{"id":"20230209","title":"[js] Default parameters of function & Spread syntax in object literals","date":"2023-02-09","category":["frontend","javascript"],"tag":["javascript","es5","default parameter","spread syntax"]},"next":{"id":"20230221","title":"wsl.exe 실행되지 않음","date":"2023-02-21","category":["OS","window"],"tag":["wsl","ubuntu"]},"nearPost":[{"id":"20230925","title":"Bastion Host 사용하여 RDS 접속하기","date":"2023-09-25","category":["Cloud","aws"],"tag":["BastionHost","RDS"]},{"id":"20230526","title":"Java Bean Mapping library 적용 - MapStruct","date":"2023-05-26","category":["backend","spring"],"tag":["MapStruct","jpa","java"]},{"id":"20230221","title":"wsl.exe 실행되지 않음","date":"2023-02-21","category":["OS","window"],"tag":["wsl","ubuntu"]},{"id":"20230209","title":"[js] Default parameters of function & Spread syntax in object literals","date":"2023-02-09","category":["frontend","javascript"],"tag":["javascript","es5","default parameter","spread syntax"]},{"id":"20221114","title":"Github Action - AWS EC2에 SpringBoot 배포","date":"2022-11-14","category":["tool","git"],"tag":["git-action","Git","aws"]}]},"__N_SSG":true}